/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'sasai' at '17/02/23 13:58' with Gradle 2.14.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14.1/userguide/tutorial_java_projects.html
 */
plugins {
  id 'org.springframework.boot' version '2.1.9.RELEASE'
  id 'java'
  id 'eclipse'
}

apply plugin: 'io.spring.dependency-management'

sourceCompatibility = 1.8

jar {
	baseName = 'shooter'
	version = '0.1.1'
}

eclipse {
	classpath {
		containers 'org.springsource.ide.eclipse.gradle.classpathcontainer'
	}
}
// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'

	compile('org.springframework.boot:spring-boot-starter-web') {
		exclude module: 'spring-boot-starter-tomcat'
	}
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-jetty')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	runtime('org.postgresql:postgresql')
	compile('org.projectlombok:lombok:1.16.14')
	compile('commons-codec:commons-codec:1.10')
//	compile('com.google.javascript:closure-compiler:v20191027')

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
